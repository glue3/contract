{"version":3,"file":"contract.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/promise.js","../src/contract.js"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else {\n        throw Error(`Promise result ${status == PromiseResult.Failed ? \"Failed\" :\n            status == PromiseResult.NotReady ? \"NotReady\" : status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function call({ privateFunction = false, payableFunction = false }) {\n    return function (target, key, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (privateFunction && near.predecessorAccountId() !== near.currentAccountId()) {\n                throw Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > BigInt(0)) {\n                throw Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function view({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from \"./api\";\nexport class PromiseAction {\n}\nexport class CreateAccount extends PromiseAction {\n    add(promise_index) {\n        near.promiseBatchActionCreateAccount(promise_index);\n    }\n}\nexport class DeployContract extends PromiseAction {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeployContract(promise_index, this.code);\n    }\n}\nexport class FunctionCall extends PromiseAction {\n    constructor(function_name, args, amount, gas) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCall(promise_index, this.function_name, this.args, this.amount, this.gas);\n    }\n}\nexport class FunctionCallWeight extends PromiseAction {\n    constructor(function_name, args, amount, gas, weight) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n        this.weight = weight;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCallWeight(promise_index, this.function_name, this.args, this.amount, this.gas, this.weight);\n    }\n}\nexport class Transfer extends PromiseAction {\n    constructor(amount) {\n        super();\n        this.amount = amount;\n    }\n    add(promise_index) {\n        near.promiseBatchActionTransfer(promise_index, this.amount);\n    }\n}\nexport class Stake extends PromiseAction {\n    constructor(amount, public_key) {\n        super();\n        this.amount = amount;\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionStake(promise_index, this.amount, this.public_key.data);\n    }\n}\nexport class AddFullAccessKey extends PromiseAction {\n    constructor(public_key, nonce) {\n        super();\n        this.public_key = public_key;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFullAccess(promise_index, this.public_key.data, this.nonce);\n    }\n}\nexport class AddAccessKey extends PromiseAction {\n    constructor(public_key, allowance, receiver_id, function_names, nonce) {\n        super();\n        this.public_key = public_key;\n        this.allowance = allowance;\n        this.receiver_id = receiver_id;\n        this.function_names = function_names;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFunctionCall(promise_index, this.public_key.data, this.nonce, this.allowance, this.receiver_id, this.function_names);\n    }\n}\nexport class DeleteKey extends PromiseAction {\n    constructor(public_key) {\n        super();\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteKey(promise_index, this.public_key.data);\n    }\n}\nexport class DeleteAccount extends PromiseAction {\n    constructor(beneficiary_id) {\n        super();\n        this.beneficiary_id = beneficiary_id;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteAccount(promise_index, this.beneficiary_id);\n    }\n}\nclass PromiseSingle {\n    constructor(account_id, actions, after, promise_index) {\n        this.account_id = account_id;\n        this.actions = actions;\n        this.after = after;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let promise_index;\n        if (this.after) {\n            promise_index = near.promiseBatchThen(this.after.constructRecursively(), this.account_id);\n        }\n        else {\n            promise_index = near.promiseBatchCreate(this.account_id);\n        }\n        for (let action of this.actions) {\n            action.add(promise_index);\n        }\n        this.promise_index = promise_index;\n        return promise_index;\n    }\n}\nexport class PromiseJoint {\n    constructor(promise_a, promise_b, promise_index) {\n        this.promise_a = promise_a;\n        this.promise_b = promise_b;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let res = near.promiseAnd(BigInt(this.promise_a.constructRecursively()), BigInt(this.promise_b.constructRecursively()));\n        this.promise_index = res;\n        return res;\n    }\n}\nexport class NearPromise {\n    constructor(subtype, should_return) {\n        this.subtype = subtype;\n        this.should_return = should_return;\n    }\n    static new(account_id) {\n        let subtype = new PromiseSingle(account_id, [], null, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    add_action(action) {\n        if (this.subtype instanceof PromiseJoint) {\n            throw new Error(\"Cannot add action to a joint promise.\");\n        }\n        else {\n            this.subtype.actions.push(action);\n        }\n        return this;\n    }\n    createAccount() {\n        return this.add_action(new CreateAccount());\n    }\n    deployContract(code) {\n        return this.add_action(new DeployContract(code));\n    }\n    functionCall(function_name, args, amount, gas) {\n        return this.add_action(new FunctionCall(function_name, args, amount, gas));\n    }\n    functionCallWeight(function_name, args, amount, gas, weight) {\n        return this.add_action(new FunctionCallWeight(function_name, args, amount, gas, weight));\n    }\n    transfer(amount) {\n        return this.add_action(new Transfer(amount));\n    }\n    stake(amount, public_key) {\n        return this.add_action(new Stake(amount, public_key));\n    }\n    addFullAccessKey(public_key) {\n        return this.addFullAccessKeyWithNonce(public_key, 0n);\n    }\n    addFullAccessKeyWithNonce(public_key, nonce) {\n        return this.add_action(new AddFullAccessKey(public_key, nonce));\n    }\n    addAccessKey(public_key, allowance, receiver_id, method_names) {\n        return this.addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, 0n);\n    }\n    addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, nonce) {\n        return this.add_action(new AddAccessKey(public_key, allowance, receiver_id, method_names, nonce));\n    }\n    deleteKey(public_key) {\n        return this.add_action(new DeleteKey(public_key));\n    }\n    deleteAccount(beneficiary_id) {\n        return this.add_action(new DeleteAccount(beneficiary_id));\n    }\n    and(other) {\n        let subtype = new PromiseJoint(this, other, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    then(other) {\n        if (other.subtype instanceof PromiseSingle) {\n            if (other.subtype.after !== null) {\n                throw new Error(\"Cannot callback promise which is already scheduled after another\");\n            }\n            other.subtype.after = this;\n        }\n        else {\n            throw new Error(\"Cannot callback joint promise.\");\n        }\n        return other;\n    }\n    asReturn() {\n        this.should_return = true;\n        return this;\n    }\n    constructRecursively() {\n        let res = this.subtype.constructRecursively();\n        if (this.should_return) {\n            near.promiseReturn(res);\n        }\n        return res;\n    }\n    // Called by NearBindgen, when return object is a NearPromise instance.\n    onReturn() {\n        this.asReturn().constructRecursively();\n    }\n}\n","import { NearBindgen, NearPromise, near, call, view, bytes } from 'near-sdk-js';\nimport { PublicKey } from 'near-sdk-js/lib/types'\n\n@NearBindgen({})\nclass HelloNear {\n\n  @call({})\n  test_deploy({ }) {\n    let promise = NearPromise.new('abc.dev-1663003785845-27921924996527')\n\n    // possible promise actions, choose and chain what you need:\n    promise.createAccount()\n    .transfer(10_000_000_000_000_000_000_000_000n)\n    .addFullAccessKey(new PublicKey(near.signerAccountPk()))\n    .deployContract(includeBytes('../../../../../../Downloads/fungible_token.wasm'))\n\n    return promise\n  }\n}"],"names":["PromiseResult","PromiseError","u8ArrayToBytes","array","ret","e","String","fromCharCode","bytes","strOrU8Array","checkStringIsBytes","Uint8Array","Error","str","i","length","charCodeAt","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","b","c","encode","Array","from","reverse","reduce","acc","undefined","decode","alphabet","digits","isArray","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","data_len","ED25519","SECP256K1","UnknownCurve","split_key_type_data","value","idx","curveTypeFromStr","substring","ParsePublicKeyError","InvalidLengthError","constructor","Base58Error","error","PublicKey","curve_type","curve_len","curveType","fromString","curve","key_data","err","message","U64_MAX","EVICTED_REGISTER","signerAccountPk","env","signer_account_pk","read_register","predecessorAccountId","predecessor_account_id","attachedDeposit","attached_deposit","storageRead","key","storage_read","currentAccountId","current_account_id","promiseAnd","promiseIndex","promise_and","promiseBatchCreate","accountId","promise_batch_create","promiseBatchThen","promise_batch_then","promiseBatchActionCreateAccount","promise_batch_action_create_account","promiseBatchActionDeployContract","code","promise_batch_action_deploy_contract","promiseBatchActionFunctionCall","methodName","amount","gas","promise_batch_action_function_call","promiseBatchActionTransfer","promise_batch_action_transfer","promiseBatchActionStake","publicKey","promise_batch_action_stake","promiseBatchActionAddKeyWithFullAccess","nonce","promise_batch_action_add_key_with_full_access","promiseBatchActionAddKeyWithFunctionCall","allowance","receiverId","methodNames","promise_batch_action_add_key_with_function_call","promiseBatchActionDeleteKey","promise_batch_action_delete_key","promiseBatchActionDeleteAccount","beneficiaryId","promise_batch_action_delete_account","promiseBatchActionFunctionCallWeight","weight","promise_batch_action_function_call_weight","promiseReturn","promiseIdx","promise_return","storageWrite","exist","storage_write","call","privateFunction","payableFunction","target","descriptor","originalMethod","near","BigInt","NearBindgen","requireInit","_create","_getState","rawState","_deserialize","_saveToStorage","obj","_serialize","_getArgs","JSON","parse","stringify","_reconstruct","classObject","plainObject","item","deserialize","_requireInit","PromiseAction","CreateAccount","add","promise_index","DeployContract","FunctionCall","function_name","FunctionCallWeight","Transfer","Stake","public_key","AddFullAccessKey","AddAccessKey","receiver_id","function_names","DeleteKey","DeleteAccount","beneficiary_id","PromiseSingle","account_id","actions","after","constructRecursively","action","PromiseJoint","promise_a","promise_b","NearPromise","subtype","should_return","new","add_action","createAccount","deployContract","functionCall","functionCallWeight","transfer","stake","addFullAccessKey","addFullAccessKeyWithNonce","addAccessKey","method_names","addAccessKeyWithNonce","deleteKey","deleteAccount","and","other","then","asReturn","onReturn","HelloNear","test_deploy","promise"],"mappings":"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"}